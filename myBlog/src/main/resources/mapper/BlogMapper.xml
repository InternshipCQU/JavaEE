<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.BlogMapper">
    <update id="like">
        update blogInfo set likesNum = likesNum + 1 where blogId = #{blogId};
    </update>

    <update id="cancelLike">
        update blogInfo set likesNum = likesNum - 1 where blogId = #{blogId};
    </update>

    <insert id="writelikerecord">
        insert into `blogLike`(`blogId`,`userId`) values(#{blogId},#{userId});
    </insert>

    <select id="isliked" resultType="Integer">
        select count(*) from `blogLike` where `blogId`=#{blogId} and `userId`=#{userId};
    </select>
    <delete id="deletelikerecord">
        delete from `blogLike` where `blogId`=#{blogId} and `userId`=#{userId};
    </delete>

    <insert id="comment">
        insert into blogComment(commentContent, createTime, blogId, userId)
        values(#{comment}, #{createTime}, #{blogId}, #{userId})
    </insert>

    <insert id="forward">
        insert into blogForward(createTime, blogId, userId)
        values(#{createTime}, #{blogId}, #{userId})
    </insert>

    <insert id="collect">
        insert into blogCollect(createTime, blogId, userId)
        values(#{createTime}, #{blogId}, #{userId})
    </insert>

    <update id="addCollectNum">
        update blogInfo set collectNum = collectNum + 1 where blogId = #{blogId}
    </update>

    <update id="deductCollectNum">
        update blogInfo set collectNum = collectNum - 1 where blogId = #{blogId}
    </update>

    <update id="updateMarkWhenCancelCollect">
        UPDATE TagMark SET ${tagName} = ${tagName} - 3 WHERE userId = #{userId}
    </update>


    <select id="isCollect" resultType="Integer">
        select `blogCollect`.blogId from `blogCollect`
        where #{blogId} = `blogCollect`.blogId and #{userId} = `blogCollect`.userId
    </select>

    <delete id="cancelCollect">
        delete from `blogCollect` where #{blogId} = `blogCollect`.blogId and #{userId} = `blogCollect`.userId
    </delete>

    <delete id="cancelCollectByBlogId">
        delete from `blogCollect` where #{blogId} = `blogCollect`.blogId
    </delete>

    <select id="getBlog" resultType="com.example.demo.entity.BlogInfo">
        SELECT blogInfo.blogTitle, blogInfo.blogContent, blogInfo.createTime,
            blogInfo.clickNum, blogInfo.likesNum, blogInfo.commentNum,
            blogInfo.forwardNum, blogInfo.collectNum, blogInfo.userId, blogInfo.tagId, blogTag.tagName,blogInfo.isForward,blogInfo.summary
        FROM blogInfo, blogTag
        WHERE blogInfo.blogId = #{blogId} AND blogInfo.tagId = blogTag.tagId;
    </select>

    <select id="searchLikeBlog" resultType="com.example.demo.entity.BlogLike">
        SELECT blogLike.blogId
        FROM blogLike
        WHERE blogLike.userId = #{userId};
    </select>

    <update id="updateMarkWhenLike">
        UPDATE TagMark SET ${tagName} = ${tagName} + 1 WHERE userId = #{userId}
    </update>

    <update id="updateMarkWhenCancelLike">
        UPDATE TagMark SET ${tagName} = ${tagName} - 1 WHERE userId = #{userId}
    </update>

    <update id="updateMarkWhenComment">
        UPDATE TagMark SET ${tagName} = ${tagName} + 2 WHERE userId = #{userId}
    </update>

    <update id="updateMarkWhenForward">
        UPDATE TagMark SET ${tagName} = ${tagName} + 3 WHERE userId = #{userId}
    </update>

    <update id="updateMarkWhenCollect">
        UPDATE TagMark SET ${tagName} = ${tagName} + 3 WHERE userId = #{userId}
    </update>
</mapper>